# docker-compose.yml

FROM mysql:9.1.0
COPY backup.sql /docker-entrypoint-initdb.d/

---

version: '3.8'

services:
  app:
    image: your-spring-boot-image:latest
    container_name: springboot-app
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/side?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: mysql
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    networks:
      - app-network

  mysql:
    build:
      context: .
      dockerfile: Dockerfile-mysql
    container_name: mysql-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: side
      MYSQL_USER: root
      MYSQL_PASSWORD: mysql
      MYSQL_ROOT_PASSWORD: mysql
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:latest    # 직접 Dockerfile 없이 공식 이미지 사용
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

volumes:
  mysql-data:
  redis-data:

networks:
  app-network:
    driver: bridge